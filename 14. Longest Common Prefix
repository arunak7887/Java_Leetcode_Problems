Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string "".
Example 1:
Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:
Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
Constraints:
1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.

Code:

class Solution {
    public String longestCommonPrefix(String[] v) {
        StringBuilder ans = new StringBuilder();
        Arrays.sort(v);
        String first = v[0];
        String last = v[v.length-1];
        for (int i=0; i<Math.min(first.length(), last.length()); i++) {
            if (first.charAt(i) != last.charAt(i)) {
                return ans.toString();
            }
            ans.append(first.charAt(i));
        }
        return ans.toString();
    }
}



Code2:
import java.util.Arrays;
public class LongestCommonPrefix {
	public static void main(String args[]) {
		String[] arr= {"mint","mini","mineral"};
		int size=arr.length;
		if(size==0) {
			System.out.println("Longest comon prefix");
		}else if(size==1) {
			System.out.println("Longest common prefix:"+arr[0]);	
		}else {
			Arrays.sort(arr);
			int length =arr[0].length();
			StringBuilder res=new StringBuilder();
			
			for(int i=0;i<length;i++) {
				if(arr[0].charAt(i)==arr[size-1].charAt(i)) {
					res.append(arr[0].charAt(i));
				}else {
					break;
				}
			}
			String result=res.toString();
			System.out.println("Longest Common prefix:"+result);
		}
	}
}
